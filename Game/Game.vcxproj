<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>17.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{075ecf4d-6d89-4d58-9763-6819c8cc6290}</ProjectGuid>
    <RootNamespace>Game</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)\__BUILD__\$(Platform)\$(Configuration)\Game\</OutDir>
    <IntDir>$(SolutionDir)\__BUILD__\Intermediate\$(Platform)\$(Configuration)\Game\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)\__BUILD__\$(Platform)\$(Configuration)\Game\</OutDir>
    <IntDir>$(SolutionDir)\__BUILD__\Intermediate\$(Platform)\$(Configuration)\Game\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)\__BUILD__\$(Platform)\$(Configuration)\Game\</OutDir>
    <IntDir>$(SolutionDir)\__BUILD__\Intermediate\$(Platform)\$(Configuration)\Game\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)\__BUILD__\$(Platform)\$(Configuration)\Game\</OutDir>
    <IntDir>$(SolutionDir)\__BUILD__\Intermediate\$(Platform)\$(Configuration)\Game\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <AdditionalIncludeDirectories>%JIMARA_REPO%/__Source__;%JIMARA_REPO%/Jimara-ThirdParty/glm;%(AdditionalIncludeDirectories);</AdditionalIncludeDirectories>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>%JIMARA_REPO%\__BUILD__\Windows\Jimara\$(Platform)\$(Configuration)\;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
      <AdditionalDependencies>Jimara.lib;Jimara-StateMachines.lib;Jimara-GenericInputs.lib;%(AdditionalDependencies);</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>set jimara_src_dir="%JIMARA_REPO%\__Source__\Jimara"
set game_src_dir="$(ProjectDir)\"

set shader_intermediate_dir="$(SolutionDir)\__BUILD__\Intermediate\GLSL\$(Configuration)\$(Platform)\LitShaders"
set shader_output_dir="$(OutDir)Shaders"

python "%JIMARA_REPO%\__Scripts__\jimara_build_shaders.py"  %jimara_src_dir% %game_src_dir% -id %shader_intermediate_dir% -o %shader_output_dir%

set game_type_registry="$(ProjectName)::$(ProjectName)_TypeRegistry"
set game_type_registry_impl=%game_src_dir%\__Generated__\TypeRegistry.impl.h
python "%JIMARA_REPO%\__Scripts__\jimara_implement_type_registrator.py" %game_src_dir% %game_type_registry% %game_type_registry_impl%
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <AdditionalIncludeDirectories>%JIMARA_REPO%/__Source__;%JIMARA_REPO%/Jimara-ThirdParty/glm;%(AdditionalIncludeDirectories);</AdditionalIncludeDirectories>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>%JIMARA_REPO%\__BUILD__\Windows\Jimara\$(Platform)\$(Configuration)\;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
      <AdditionalDependencies>Jimara.lib;Jimara-StateMachines.lib;Jimara-GenericInputs.lib;%(AdditionalDependencies);</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>set jimara_src_dir="%JIMARA_REPO%\__Source__\Jimara"
set game_src_dir="$(ProjectDir)\"

set shader_intermediate_dir="$(SolutionDir)\__BUILD__\Intermediate\GLSL\$(Configuration)\$(Platform)\LitShaders"
set shader_output_dir="$(OutDir)Shaders"

python "%JIMARA_REPO%\__Scripts__\jimara_build_shaders.py"  %jimara_src_dir% %game_src_dir% -id %shader_intermediate_dir% -o %shader_output_dir%

set game_type_registry="$(ProjectName)::$(ProjectName)_TypeRegistry"
set game_type_registry_impl=%game_src_dir%\__Generated__\TypeRegistry.impl.h
python "%JIMARA_REPO%\__Scripts__\jimara_implement_type_registrator.py" %game_src_dir% %game_type_registry% %game_type_registry_impl%
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <AdditionalIncludeDirectories>%JIMARA_REPO%/__Source__;%JIMARA_REPO%/Jimara-ThirdParty/glm;%(AdditionalIncludeDirectories);</AdditionalIncludeDirectories>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>%JIMARA_REPO%\__BUILD__\Windows\Jimara\$(Platform)\$(Configuration)\;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
      <AdditionalDependencies>Jimara.lib;Jimara-StateMachines.lib;Jimara-GenericInputs.lib;%(AdditionalDependencies);</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>set jimara_src_dir="%JIMARA_REPO%\__Source__\Jimara"
set game_src_dir="$(ProjectDir)\"

set shader_intermediate_dir="$(SolutionDir)\__BUILD__\Intermediate\GLSL\$(Configuration)\$(Platform)\LitShaders"
set shader_output_dir="$(OutDir)Shaders"

python "%JIMARA_REPO%\__Scripts__\jimara_build_shaders.py"  %jimara_src_dir% %game_src_dir% -id %shader_intermediate_dir% -o %shader_output_dir%

set game_type_registry="$(ProjectName)::$(ProjectName)_TypeRegistry"
set game_type_registry_impl=%game_src_dir%\__Generated__\TypeRegistry.impl.h
python "%JIMARA_REPO%\__Scripts__\jimara_implement_type_registrator.py" %game_src_dir% %game_type_registry% %game_type_registry_impl%
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <AdditionalIncludeDirectories>%JIMARA_REPO%/__Source__;%JIMARA_REPO%/Jimara-ThirdParty/glm;%(AdditionalIncludeDirectories);</AdditionalIncludeDirectories>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <FloatingPointModel>Fast</FloatingPointModel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>%JIMARA_REPO%\__BUILD__\Windows\Jimara\$(Platform)\$(Configuration)\;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
      <AdditionalDependencies>Jimara.lib;Jimara-StateMachines.lib;Jimara-GenericInputs.lib;%(AdditionalDependencies);</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>set jimara_src_dir="%JIMARA_REPO%\__Source__\Jimara"
set game_src_dir="$(ProjectDir)\"

set shader_intermediate_dir="$(SolutionDir)\__BUILD__\Intermediate\GLSL\$(Configuration)\$(Platform)\LitShaders"
set shader_output_dir="$(OutDir)Shaders"

python "%JIMARA_REPO%\__Scripts__\jimara_build_shaders.py"  %jimara_src_dir% %game_src_dir% -id %shader_intermediate_dir% -o %shader_output_dir%

set game_type_registry="$(ProjectName)::$(ProjectName)_TypeRegistry"
set game_type_registry_impl=%game_src_dir%\__Generated__\TypeRegistry.impl.h
python "%JIMARA_REPO%\__Scripts__\jimara_implement_type_registrator.py" %game_src_dir% %game_type_registry% %game_type_registry_impl%
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="TypeRegistry.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Jimara.h" />
    <ClInclude Include="TypeRegistry.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>